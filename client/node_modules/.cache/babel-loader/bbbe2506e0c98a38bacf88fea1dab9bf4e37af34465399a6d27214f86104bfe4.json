{"ast":null,"code":"import React,{useState}from'react';import{useNavigate}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Login(){const[username,setUsername]=useState('');const[password,setPassword]=useState('');const[error,setError]=useState('');const navigate=useNavigate();const handleLogin=async e=>{e.preventDefault();// send login request to the backend\ntry{const response=await fetch('/login',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({username,password})});if(response.ok){setError('');alert('login successful! ^_^');navigate('/upload');// redirect to upload page\n}else{setError('invalid credentials');}}catch(error){setError('something went wrong');console.error(error);}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"admin login :3\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleLogin,children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"username:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:username,onChange:e=>setUsername(e.target.value),required:true})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"label\",{children:[\"password:\",/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:password,onChange:e=>setPassword(e.target.value),required:true})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"login\"})]}),error&&/*#__PURE__*/_jsx(\"p\",{style:{color:'red'},children:error})]});}export default Login;","map":{"version":3,"names":["React","useState","useNavigate","jsx","_jsx","jsxs","_jsxs","Login","username","setUsername","password","setPassword","error","setError","navigate","handleLogin","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","alert","console","children","onSubmit","type","value","onChange","target","required","style","color"],"sources":["C:/Users/r-aas/Documents/Azure/cursed-cat-central/client/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction Login() {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // send login request to the backend\r\n        try {\r\n            const response = await fetch('/login', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ username, password }),\r\n            });\r\n\r\n            if (response.ok) {\r\n                setError('');\r\n                alert('login successful! ^_^');\r\n                navigate('/upload'); // redirect to upload page\r\n            } else {\r\n                setError('invalid credentials');\r\n            }\r\n        } catch (error) {\r\n            setError('something went wrong');\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>admin login :3</h1>\r\n            <form onSubmit={handleLogin}>\r\n                <label>\r\n                    username:\r\n                    <input\r\n                        type=\"text\"\r\n                        value={username}\r\n                        onChange={(e) => setUsername(e.target.value)}\r\n                        required\r\n                    />\r\n                </label>\r\n                <br />\r\n                <label>\r\n                    password:\r\n                    <input\r\n                        type=\"password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        required\r\n                    />\r\n                </label>\r\n                <br />\r\n                <button type=\"submit\">login</button>\r\n            </form>\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,WAAW,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE/C,QAAS,CAAAC,KAAKA,CAAA,CAAG,CACb,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGR,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACS,QAAQ,CAAEC,WAAW,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACW,KAAK,CAAEC,QAAQ,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAAAa,QAAQ,CAAGZ,WAAW,CAAC,CAAC,CAE9B,KAAM,CAAAa,WAAW,CAAG,KAAO,CAAAC,CAAC,EAAK,CAC7BA,CAAC,CAACC,cAAc,CAAC,CAAC,CAElB;AACA,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,QAAQ,CAAE,CACnCC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEhB,QAAQ,CAAEE,QAAS,CAAC,CAC/C,CAAC,CAAC,CAEF,GAAIQ,QAAQ,CAACO,EAAE,CAAE,CACbZ,QAAQ,CAAC,EAAE,CAAC,CACZa,KAAK,CAAC,uBAAuB,CAAC,CAC9BZ,QAAQ,CAAC,SAAS,CAAC,CAAE;AACzB,CAAC,IAAM,CACHD,QAAQ,CAAC,qBAAqB,CAAC,CACnC,CACJ,CAAE,MAAOD,KAAK,CAAE,CACZC,QAAQ,CAAC,sBAAsB,CAAC,CAChCc,OAAO,CAACf,KAAK,CAACA,KAAK,CAAC,CACxB,CACJ,CAAC,CAED,mBACIN,KAAA,QAAAsB,QAAA,eACIxB,IAAA,OAAAwB,QAAA,CAAI,gBAAc,CAAI,CAAC,cACvBtB,KAAA,SAAMuB,QAAQ,CAAEd,WAAY,CAAAa,QAAA,eACxBtB,KAAA,UAAAsB,QAAA,EAAO,WAEH,cAAAxB,IAAA,UACI0B,IAAI,CAAC,MAAM,CACXC,KAAK,CAAEvB,QAAS,CAChBwB,QAAQ,CAAGhB,CAAC,EAAKP,WAAW,CAACO,CAAC,CAACiB,MAAM,CAACF,KAAK,CAAE,CAC7CG,QAAQ,MACX,CAAC,EACC,CAAC,cACR9B,IAAA,QAAK,CAAC,cACNE,KAAA,UAAAsB,QAAA,EAAO,WAEH,cAAAxB,IAAA,UACI0B,IAAI,CAAC,UAAU,CACfC,KAAK,CAAErB,QAAS,CAChBsB,QAAQ,CAAGhB,CAAC,EAAKL,WAAW,CAACK,CAAC,CAACiB,MAAM,CAACF,KAAK,CAAE,CAC7CG,QAAQ,MACX,CAAC,EACC,CAAC,cACR9B,IAAA,QAAK,CAAC,cACNA,IAAA,WAAQ0B,IAAI,CAAC,QAAQ,CAAAF,QAAA,CAAC,OAAK,CAAQ,CAAC,EAClC,CAAC,CACNhB,KAAK,eAAIR,IAAA,MAAG+B,KAAK,CAAE,CAAEC,KAAK,CAAE,KAAM,CAAE,CAAAR,QAAA,CAAEhB,KAAK,CAAI,CAAC,EAChD,CAAC,CAEd,CAEA,cAAe,CAAAL,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}