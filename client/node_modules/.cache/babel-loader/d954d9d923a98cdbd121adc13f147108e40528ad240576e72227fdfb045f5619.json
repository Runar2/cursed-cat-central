{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\r-aas\\\\Documents\\\\Azure\\\\cursed-cat-central\\\\client\\\\src\\\\components\\\\ImageLoader.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './ImageLoader.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImageLoader() {\n  _s();\n  const [currentImage, setCurrentImage] = useState(null);\n  const [isTransitioning, setIsTransitioning] = useState(false);\n  const loadRandomImage = async () => {\n    setIsTransitioning(true); // start shrink/spin animation\n\n    // wait for the animation to complete before changing the image\n    setTimeout(async () => {\n      try {\n        const response = await fetch('/local-images');\n        if (response.ok) {\n          setCurrentImage(response.url + '?' + new Date().getTime());\n        } else {\n          console.error('error loading image');\n        }\n      } catch (error) {\n        console.error('error:', error);\n      } finally {\n        // start grow-in effect after switching the image\n        setTimeout(() => setIsTransitioning(false), 500);\n      }\n    }, 500); // this timeout matches the shrinking duration\n  };\n  useEffect(() => {\n    loadRandomImage();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-loader-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"random image loader nya~ :3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), currentImage ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: currentImage,\n      alt: \"random from cursed cat central\",\n      className: `image ${isTransitioning ? 'transition' : ''}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"loading image...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: loadRandomImage,\n      className: \"button\",\n      children: \"load new image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(ImageLoader, \"0j2R3+Gb/ZLcx4MV+txNZ7pAFnQ=\");\n_c = ImageLoader;\nexport default ImageLoader;\nvar _c;\n$RefreshReg$(_c, \"ImageLoader\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ImageLoader","_s","currentImage","setCurrentImage","isTransitioning","setIsTransitioning","loadRandomImage","setTimeout","response","fetch","ok","url","Date","getTime","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","_c","$RefreshReg$"],"sources":["C:/Users/r-aas/Documents/Azure/cursed-cat-central/client/src/components/ImageLoader.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './ImageLoader.css';\r\n\r\nfunction ImageLoader() {\r\n    const [currentImage, setCurrentImage] = useState(null);\r\n    const [isTransitioning, setIsTransitioning] = useState(false);\r\n\r\n    const loadRandomImage = async () => {\r\n        setIsTransitioning(true); // start shrink/spin animation\r\n\r\n        // wait for the animation to complete before changing the image\r\n        setTimeout(async () => {\r\n            try {\r\n                const response = await fetch('/local-images');\r\n                if (response.ok) {\r\n                    setCurrentImage(response.url + '?' + new Date().getTime());\r\n                } else {\r\n                    console.error('error loading image');\r\n                }\r\n            } catch (error) {\r\n                console.error('error:', error);\r\n            } finally {\r\n                // start grow-in effect after switching the image\r\n                setTimeout(() => setIsTransitioning(false), 500);\r\n            }\r\n        }, 500); // this timeout matches the shrinking duration\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadRandomImage();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"image-loader-container\">\r\n            <h1>random image loader nya~ :3</h1>\r\n            {currentImage ? (\r\n                <img\r\n                    src={currentImage}\r\n                    alt=\"random from cursed cat central\"\r\n                    className={`image ${isTransitioning ? 'transition' : ''}`}\r\n                />\r\n            ) : (\r\n                <p>loading image...</p>\r\n            )}\r\n            <br />\r\n            <button onClick={loadRandomImage} className=\"button\">load new image</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImageLoader;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACQ,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAE7D,MAAMU,eAAe,GAAG,MAAAA,CAAA,KAAY;IAChCD,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC;;IAE1B;IACAE,UAAU,CAAC,YAAY;MACnB,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,eAAe,CAAC;QAC7C,IAAID,QAAQ,CAACE,EAAE,EAAE;UACbP,eAAe,CAACK,QAAQ,CAACG,GAAG,GAAG,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC;QAC9D,CAAC,MAAM;UACHC,OAAO,CAACC,KAAK,CAAC,qBAAqB,CAAC;QACxC;MACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;QACZD,OAAO,CAACC,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAClC,CAAC,SAAS;QACN;QACAR,UAAU,CAAC,MAAMF,kBAAkB,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC;MACpD;IACJ,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;EACb,CAAC;EAEDR,SAAS,CAAC,MAAM;IACZS,eAAe,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIP,OAAA;IAAKiB,SAAS,EAAC,wBAAwB;IAAAC,QAAA,gBACnClB,OAAA;MAAAkB,QAAA,EAAI;IAA2B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACnCnB,YAAY,gBACTH,OAAA;MACIuB,GAAG,EAAEpB,YAAa;MAClBqB,GAAG,EAAC,gCAAgC;MACpCP,SAAS,EAAE,SAASZ,eAAe,GAAG,YAAY,GAAG,EAAE;IAAG;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D,CAAC,gBAEFtB,OAAA;MAAAkB,QAAA,EAAG;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACzB,eACDtB,OAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNtB,OAAA;MAAQyB,OAAO,EAAElB,eAAgB;MAACU,SAAS,EAAC,QAAQ;MAAAC,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3E,CAAC;AAEd;AAACpB,EAAA,CA7CQD,WAAW;AAAAyB,EAAA,GAAXzB,WAAW;AA+CpB,eAAeA,WAAW;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}