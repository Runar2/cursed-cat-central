{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./ImageLoader.css';// import the CSS file for styles\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ImageLoader(){const[currentImage,setCurrentImage]=useState(null);const[isSpinning,setIsSpinning]=useState(false);const loadRandomImage=async()=>{setIsSpinning(true);// start spin\ntry{const response=await fetch('/local-images');if(response.ok){setCurrentImage(response.url+'?'+new Date().getTime());}else{console.error('error loading image');}}catch(error){console.error('error:',error);}finally{setTimeout(()=>setIsSpinning(false),1000);// end spin after 1s\n}};useEffect(()=>{loadRandomImage();},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"image-loader-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"random image loader nya~ :3\"}),currentImage?/*#__PURE__*/_jsx(\"img\",{src:currentImage,alt:\"random from cursed cat central\",className:`image ${isSpinning?'spin':''}`}):/*#__PURE__*/_jsx(\"p\",{children:\"loading image...\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{onClick:loadRandomImage,className:\"button\",children:\"load new image\"})]});}export default ImageLoader;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","ImageLoader","currentImage","setCurrentImage","isSpinning","setIsSpinning","loadRandomImage","response","fetch","ok","url","Date","getTime","console","error","setTimeout","className","children","src","alt","onClick"],"sources":["C:/Users/r-aas/Documents/Azure/cursed-cat-central/client/src/components/ImageLoader.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './ImageLoader.css'; // import the CSS file for styles\r\n\r\nfunction ImageLoader() {\r\n    const [currentImage, setCurrentImage] = useState(null);\r\n    const [isSpinning, setIsSpinning] = useState(false);\r\n\r\n    const loadRandomImage = async () => {\r\n        setIsSpinning(true); // start spin\r\n        try {\r\n            const response = await fetch('/local-images');\r\n            if (response.ok) {\r\n                setCurrentImage(response.url + '?' + new Date().getTime());\r\n            } else {\r\n                console.error('error loading image');\r\n            }\r\n        } catch (error) {\r\n            console.error('error:', error);\r\n        } finally {\r\n            setTimeout(() => setIsSpinning(false), 1000); // end spin after 1s\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadRandomImage();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"image-loader-container\">\r\n            <h1>random image loader nya~ :3</h1>\r\n            {currentImage ? (\r\n                <img\r\n                    src={currentImage}\r\n                    alt=\"random from cursed cat central\"\r\n                    className={`image ${isSpinning ? 'spin' : ''}`}\r\n                />\r\n            ) : (\r\n                <p>loading image...</p>\r\n            )}\r\n            <br />\r\n            <button onClick={loadRandomImage} className=\"button\">load new image</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImageLoader;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,mBAAmB,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE5B,QAAS,CAAAC,WAAWA,CAAA,CAAG,CACnB,KAAM,CAACC,YAAY,CAAEC,eAAe,CAAC,CAAGR,QAAQ,CAAC,IAAI,CAAC,CACtD,KAAM,CAACS,UAAU,CAAEC,aAAa,CAAC,CAAGV,QAAQ,CAAC,KAAK,CAAC,CAEnD,KAAM,CAAAW,eAAe,CAAG,KAAAA,CAAA,GAAY,CAChCD,aAAa,CAAC,IAAI,CAAC,CAAE;AACrB,GAAI,CACA,KAAM,CAAAE,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,eAAe,CAAC,CAC7C,GAAID,QAAQ,CAACE,EAAE,CAAE,CACbN,eAAe,CAACI,QAAQ,CAACG,GAAG,CAAG,GAAG,CAAG,GAAI,CAAAC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC,CAC9D,CAAC,IAAM,CACHC,OAAO,CAACC,KAAK,CAAC,qBAAqB,CAAC,CACxC,CACJ,CAAE,MAAOA,KAAK,CAAE,CACZD,OAAO,CAACC,KAAK,CAAC,QAAQ,CAAEA,KAAK,CAAC,CAClC,CAAC,OAAS,CACNC,UAAU,CAAC,IAAMV,aAAa,CAAC,KAAK,CAAC,CAAE,IAAI,CAAC,CAAE;AAClD,CACJ,CAAC,CAEDT,SAAS,CAAC,IAAM,CACZU,eAAe,CAAC,CAAC,CACrB,CAAC,CAAE,EAAE,CAAC,CAEN,mBACIN,KAAA,QAAKgB,SAAS,CAAC,wBAAwB,CAAAC,QAAA,eACnCnB,IAAA,OAAAmB,QAAA,CAAI,6BAA2B,CAAI,CAAC,CACnCf,YAAY,cACTJ,IAAA,QACIoB,GAAG,CAAEhB,YAAa,CAClBiB,GAAG,CAAC,gCAAgC,CACpCH,SAAS,CAAE,SAASZ,UAAU,CAAG,MAAM,CAAG,EAAE,EAAG,CAClD,CAAC,cAEFN,IAAA,MAAAmB,QAAA,CAAG,kBAAgB,CAAG,CACzB,cACDnB,IAAA,QAAK,CAAC,cACNA,IAAA,WAAQsB,OAAO,CAAEd,eAAgB,CAACU,SAAS,CAAC,QAAQ,CAAAC,QAAA,CAAC,gBAAc,CAAQ,CAAC,EAC3E,CAAC,CAEd,CAEA,cAAe,CAAAhB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}